# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19c3CYmtMd7NnhNCWH5LGIyi3s97xZmJn
"""

import tensorflow as tf
import numpy as np

celsius=np.array([-40,-10,0,8,15,22,38],dtype=float)
fahrenheit = np.array([-40,14,32,46,59,72,100],dtype = float)

oculta1 = tf.keras.layers.Dense(units=500,input_shape = [1])
oculta2 = tf.keras.layers.Dense(units =500)
salida = tf.keras.layers.Dense(units=1)
modelo = tf.keras.Sequential([oculta1,oculta2,salida])

modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

print("Comienza el entrenamiento... ")
historial = modelo.fit(celsius,fahrenheit,epochs = 1000,verbose=False)
print("Modelo entrenado!")

import matplotlib.pyplot as plt
plt.xlabel("a Epoca")
plt.ylabel("Magnitud de perdida")
plt.plot(historial.history["loss"])

print("Hagamos una prediccio!")
resultado = modelo.predict([100.0])
print("El resultado es "+ str(resultado) + "fahrenheit")



print("Variables internas del modelo")
print(capa.get_weights())